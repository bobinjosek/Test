apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  labels:
    app: example-app
    template: deployment-template
  name: example-app
  namespace: pipeline
spec:
  selector:
    app: example-app
    deploymentconfig: example-app
  strategy:
    activeDeadlineSeconds: 21600
    resources: {}
    rollingParams:
      intervalSeconds: 1
      maxSurge: 25%
      maxUnavailable: 25%
      timeoutSeconds: 600
      updatePeriodSeconds: 1
    type: Rolling
  template:
    metadata:
      labels:
        app: example-app
        deploymentconfig: example-app
    spec:
      containers:
      - image: docker-registry.default.svc:5000/openshift/newrelic-java
        imagePullPolicy: Always
        name: newrelic-sidecar
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /newrelic
          name: newrelic-volume
        - mountPath: /newrelic-config
          name: newrelic-config
      - env:
        - name: NEW_RELIC_APP_NAME
          value: example-app
        - name: NEW_RELIC_LICENSE_KEY
          valueFrom:
            secretKeyRef:
              key: API_KEY
              name: newrelic-apikey
        - name: CATALINA_OPTS_APPEND
          value: -javaagent:/newrelic/newrelic.jar
        - name: NEW_RELIC_LOG
          value: STDOUT
        
        imagePullPolicy: Always
        name: example-app
        ports:
        resources: {}
        volumeMounts:
        - mountPath: /newrelic
          name: newrelic-volume
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 420
          name: newrelic-config
        name: newrelic-config
      - emptyDir: {}
        name: newrelic-volume
  test: false
  #triggers:
  #- type: ConfigChange
  #- imageChangeParams:
  #    automatic: true
  #    containerNames:
  #    - example-app
  #    from:
  #      kind: ImageStreamTag
  #      name: IMAGE:latest
  #      namespace: pipeline
      
  #  type: ImageChange
 # - imageChangeParams:
  #    automatic: true
  #    containerNames:
   #   - newrelic-sidecar
   #   from:
   #     kind: ImageStreamTag
   #     name: newrelic-sidecar:latest
   #     namespace: pipeline
     
   # type: ImageChange
